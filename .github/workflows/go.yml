name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
      id: go
    - name: Test
      run: go test -coverprofile=cover.out ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: lint
        token: ${{ secrets.GITHUB_TOKEN }}

  shadow:
    name: Shadow
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
        token: ${{ secrets.GITHUB_TOKEN }}


  DockerBuild:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, lint, shadow]
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'mhoak/clamshell'
    steps:
      - uses: actions/checkout@v2
      - name: docker-build
        run: docker build -t us.gcr.io/otrego-dev/apiserver:${GITHUB_RUN_NUMBER} .
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Log into GCP Registry
        run: gcloud auth configure-docker
      - name: upload-build
        run: docker push us.gcr.io/otrego-dev/apiserver:${GITHUB_RUN_NUMBER}
      - name: Login to GCP Prod
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PROD_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.PROD_GA_SA_KEY }}
          export_default_credentials: true
      - name: Log into GCP Registry
        run: gcloud auth configure-docker
      - name: upload-build
        run: docker push us.gcr.io/otrego-prod/apiserver:${GITHUB_RUN_NUMBER}
        
  deploy:
    name: Deploy Dev
    runs-on: ubuntu-latest
    needs: DockerBuild
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'mhoak/clamshell'
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false tf/dev

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan -var="api_docker_image=us.gcr.io/otrego-dev/apiserver:${GITHUB_RUN_NUMBER}" $GITHUB_WORKSPACE/tf/dev

      - name: Terraform Apply
        id: tf-apply
        run: terraform apply plan.tfplan

  deploy-prod:
    name: Deploy Prod
    runs-on: ubuntu-latest
    needs: deploy
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'mhoak/clamshell'
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PROD_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.PROD_GA_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false tf/prod

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan -var="api_docker_image=us.gcr.io/otrego-prod/apiserver:${GITHUB_RUN_NUMBER}" $GITHUB_WORKSPACE/tf/prod

      - name: Terraform Apply
        id: tf-apply
        run: terraform apply plan.tfplan