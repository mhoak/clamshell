name: Go

on:
  push:
    branches: [ master, m2 ]
  pull_request:
    branches: [ master, m2 ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go
    - name: Test
      run: go test -coverprofile=cover.out ./...
  
  print:
    name: Print
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  deploy:
    name: Deploy Dev
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.merged == true || github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/m2' 
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Login to GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '281.0.0'
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false tf/

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan -var="api_docker_image=gcr.io/google-samples/hello-app:2.0" $GITHUB_WORKSPACE/tf/

      - name: Terraform Apply
        id: tf-apply
        run: terraform apply plan.tfplan

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: lint
        token: ${{ secrets.GITHUB_TOKEN }}

  shadow:
    name: Shadow
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
        token: ${{ secrets.GITHUB_TOKEN }}
